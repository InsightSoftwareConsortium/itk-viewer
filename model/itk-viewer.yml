id: https://w3id.org/itk/viewer
name: itk-viewer
description: >-
  The itk-viewer model defines the classes and relationships for a viewer that allows users to view and interact with multi-dimensional images, geometry, and point sets.
license: https://creativecommons.org/publicdomain/zero/1.0/
prefixes:
  itk: https://w3id.org/itk/
  viewer: https://w3id.org/itk/viewer
  linkml: https://w3id.org/linkml/
imports:
  - linkml:types
default_range: string
default_prefix: viewer

classes:
  Actor:
    abstract: true
    description: >-
      In the Actor Model mathematical of computation, an actor is a computational entity that,
      in response to a message it receives, can concurrently:

      - send a finite number of messages to other actors;
      - create a finite number of new actors;
      - designate the behavior to be used for the next message it receives.

      Supported messages are defined in the Event classes. The valid Events' for an Actor are defined
      defined by the `receives` relationship. To send an Event to an Actor, use the `send` method.

      Actors are typically implement as finite state machines.
    class_uri: viewer:Actor

  Viewer:
    abstract: true
    is_a: Actor
    tree_root: true
    description: >-
      A viewer is an interface that allows users to view and interact with
      multi-dimensional images, geometry, and point sets.
    class_uri: viewer:Viewer

  Viewport:
    abstract: true
    is_a: Actor
    description: >-
      A viewport is a rectangular region of a viewer that displays a rendering of the scene.
    class_uri: viewer:Viewport
    attributes:
      width:
        description: >-
          The width of the viewport in pixels.
        range: integer
        required: true
        ifabsent: int(640)
      height:
        description: >-
          The height of the viewport in pixels.
        range: integer
        required: true
        ifabsent: int(480)

  MultiscaleImage:
    abstract: true
    is_a: Actor
    description: >-
      A multiscale image is a multi-dimensional image, based on the OME-Zarr data model, often preprocessed,
      that supports efficient rendering at multiple resolutions.
    class_uri: viewer:MultiscaleImage

  Renderer:
    abstract: true
    is_a: Actor
    description: >-
      A renderer is an actor that renders a scene to an in-memory RGB image for display in a viewport.
    class_uri: viewer:Renderer
    attributes:
      width:
        description: >-
          The width of the canvas in pixels.
        range: integer
        required: true
        ifabsent: int(640)
      height:
        description: >-
          The height of the canvas in pixels.
        range: integer
        required: true
        ifabsent: int(480)
    slots:
      - viewport


  Event:
    abstract: true
    description: >-
      An event is a message that can be sent to an actor. The actor can respond to the event
      by changing its state, sending messages to other actors, or creating new actors.
    class_uri: viewer:Event
    attributes:
      type:
        identifier: true
        description: >-
          The type of the event.
        range: EventType
        required: true

  RendererEvent:
    abstract: true
    is_a: Event
    description: >-
      A RendererEvent is an Event supported by a Renderer.
    class_uri: viewer:RendererEvent
    slot_usage:
      type:
        range: RendererEventType

  RenderEvent:
    is_a: RendererEvent
    description: >-
      A render event is a message that instructs a renderer to render a scene to an in-memory RGB image.
    class_uri: viewer:RenderEvent

slots:
  viewport:
    description: >-
      The viewport that displays the rendered RGB image.
    domain: Renderer
    range: Viewport
    required: true

enums:
  EventType:
    description: >-
      The types of events that can be sent to actors.
    enum_uri: viewer:EventTypes

  RendererEventType:
    description: >-
      The types of render events that can be sent to renderers.
    enum_uri: viewer:RenderEventTypes
    inherits: EventType
    permissible_values:
      Render:
        description: >-
          A render event is a message that instructs a renderer to render a scene to an in-memory RGB image.